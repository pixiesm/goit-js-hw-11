{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// key: 44685360-74500565ee10f6b109a60bbe8\n\n\nexport function getImage(image) {\n    const URL = 'https://pixabay.com/api';\n    const API_KEY = '44685360-74500565ee10f6b109a60bbe8';\n    const params = new URLSearchParams({\n        q: image,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n    });\n    const url = `${URL}?key=${API_KEY}&${params}`;\n    return fetch(url).then((response) => {\n        if (!response.ok) { throw new Error(response.status); }\n        return response.json();\n    }).catch((error) => { console.log(error) });\n        \n        \n        // data => data.json());\n    \n};\n\n\n// getImage(\"cat\").then((data) => { console.log(data) }).catch((error) => { console.log(error) });","// функцііїдля відображення\n\nimport { refs } from \"../main\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst lightbox = new SimpleLightbox('.gallery-list li', {\n    captionsData: 'alt',\n    captionsDelay: 250,\n});\n\nexport function markupImages(images) { \n    const markup = images.map(image => {\n        return `<li class=\"gallery-item\">\n      <a href='${image.largeImageURL}' class=\"gallery-link\">\n      <img src='${image.webformatURL}' \n      alt='${image.tags}'\n    width=360\n      height=200\n      class=\"gallery-image\"/>\n    </a>\n      <div class=\"info-image\"> \n        <p class=\"info-text\"> LIKES: <span class=\"info-image-span\">${image.likes} </span></p>\n        <p class=\"info-text\"> VIEWS:<span class=\"info-image-span\">${image.views} </span></p>\n         <p class=\"info-text\"> COMMENTS:<span class=\"info-image-span\">${image.comments} </span></p>\n        <p class=\"info-text\"> DOWNLOADS:<span class=\"info-image-span\">${image.downloads} </span></p>\n      </div>\n    </li>`;\n    }).join('');\n  refs.picturesList.innerHTML = markup;\n  lightbox.refresh();\n    if (lightbox) { lightbox.refresh(); }\n    else {\n        lightbox = new SimpleLightbox('.gallery-list li', {\n            captionsData: 'alt',\n        captionsDelay: 250})\n    }\n}\n\nexport function showLoader() { refs.loader.classList.remove('hidden'); }\nexport function hideLoader() { refs.loader.classList.add('hidden'); }","// логіка додатку\n\n\nimport { getImage } from \"./js/pixabay-api\";\n// getImage(\"cat\").then((data) => { console.log(data) }).catch((error) => { console.log(error) });\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\"\n\nimport {\n    markupImages,\n    showLoader,\n    hideLoader\n} from \"./js/render-functions\";\n\nexport const refs = { input: document.querySelector('.form-input'),\nbtn: document.querySelector('.search-btn'),\n    searchForm: document.querySelector('.search-form'),\n    picturesList: document.querySelector('.gallery-list'),\nloader: document.querySelector('.loader')\n};\nrefs.searchForm.addEventListener('submit', e => {\n    e.preventDefault();\n    const photosName = refs.input.value.trim();\n    if (photosName === '') {\n         iziToast.warning({\n            title: 'warning',\n            message: 'Search field can not be empty!',\n            position: 'topRight'\n        });\n        return;\n    }\n    showLoader();\n    refs.picturesList.innerHTML = \"\";\n    getImage(photosName).then(({ hits }) => {\n        if (hits.length === 0) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                position: 'topRight',\n                displayMode: 'once',\n            })\n            return;\n        }\n        hideLoader();\n        markupImages(hits);\n        resetForm();\n\n    }).catch(error => { console.log(error); });\n    \n    \n\n})\nfunction resetForm() { refs.searchForm.reset(); }\n"],"names":["getImage","image","URL","API_KEY","params","url","response","error","lightbox","SimpleLightbox","markupImages","images","markup","refs","showLoader","hideLoader","e","photosName","iziToast","hits","resetForm"],"mappings":"6vBAGO,SAASA,EAASC,EAAO,CAC5B,MAAMC,EAAM,0BACNC,EAAU,qCACVC,EAAS,IAAI,gBAAgB,CAC/B,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EACKI,EAAM,GAAGH,CAAG,QAAQC,CAAO,IAAIC,CAAM,GAC3C,OAAO,MAAMC,CAAG,EAAE,KAAMC,GAAa,CACjC,GAAI,CAACA,EAAS,GAAM,MAAM,IAAI,MAAMA,EAAS,MAAM,EACnD,OAAOA,EAAS,MACxB,CAAK,EAAE,MAAOC,GAAU,CAAE,QAAQ,IAAIA,CAAK,CAAC,CAAE,CAK9C,CCfA,MAAMC,EAAW,IAAIC,EAAe,mBAAoB,CACpD,aAAc,MACd,cAAe,GACnB,CAAC,EAEM,SAASC,EAAaC,EAAQ,CACjC,MAAMC,EAASD,EAAO,IAAIV,GACf;AAAA,iBACEA,EAAM,aAAa;AAAA,kBAClBA,EAAM,YAAY;AAAA,aACvBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAM8CA,EAAM,KAAK;AAAA,oEACZA,EAAM,KAAK;AAAA,wEACPA,EAAM,QAAQ;AAAA,wEACdA,EAAM,SAAS;AAAA;AAAA,UAGlF,EAAE,KAAK,EAAE,EACZY,EAAK,aAAa,UAAYD,EAC9BJ,EAAS,QAAO,EACVA,EAAYA,EAAS,QAAS,EAE9BA,EAAW,IAAIC,EAAe,mBAAoB,CAC9C,aAAc,MAClB,cAAe,GAAG,CAAC,CAE3B,CAEO,SAASK,GAAa,CAAED,EAAK,OAAO,UAAU,OAAO,QAAQ,CAAI,CACjE,SAASE,GAAa,CAAEF,EAAK,OAAO,UAAU,IAAI,QAAQ,CAAE,CCzB5D,MAAMA,EAAO,CAAE,MAAO,SAAS,cAAc,aAAa,EACjE,IAAK,SAAS,cAAc,aAAa,EACrC,WAAY,SAAS,cAAc,cAAc,EACjD,aAAc,SAAS,cAAc,eAAe,EACxD,OAAQ,SAAS,cAAc,SAAS,CACxC,EACAA,EAAK,WAAW,iBAAiB,SAAUG,GAAK,CAC5CA,EAAE,eAAc,EAChB,MAAMC,EAAaJ,EAAK,MAAM,MAAM,KAAI,EACxC,GAAII,IAAe,GAAI,CAClBC,EAAS,QAAQ,CACd,MAAO,UACP,QAAS,iCACT,SAAU,UACtB,CAAS,EACD,MACH,CACDJ,IACAD,EAAK,aAAa,UAAY,GAC9Bb,EAASiB,CAAU,EAAE,KAAK,CAAC,CAAE,KAAAE,CAAI,IAAO,CACpC,GAAIA,EAAK,SAAW,EAAG,CACnBD,EAAS,MAAM,CACX,MAAO,QACP,QAAS,2EACT,SAAU,WACV,YAAa,MAC7B,CAAa,EACD,MACH,CACDH,IACAL,EAAaS,CAAI,EACjBC,GAER,CAAK,EAAE,MAAMb,GAAS,CAAE,QAAQ,IAAIA,CAAK,CAAE,CAAE,CAI7C,CAAC,EACD,SAASa,GAAY,CAAEP,EAAK,WAAW,MAAK,CAAG"}